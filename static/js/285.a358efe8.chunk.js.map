{"version":3,"file":"static/js/285.a358efe8.chunk.js","mappings":"+MAEaA,EAAS,SAAAC,GAAI,OAAIC,EAAAA,EAAAA,IAAMD,EAAV,EAEbE,EAAQ,kBACnB,SAAC,KAAD,CACEC,SAAS,aACTC,cAAc,EACdC,OAAQ,EACRC,mBAAmB,GACnBC,eAAgB,CAAC,EACjBC,aAAc,CAEZC,UAAW,GACXC,SAAU,IACVC,MAAO,CACLC,WAAY,SACZC,MAAO,OACPC,SAAU,QAIZC,QAAS,CACPL,SAAU,IACVM,MAAO,CACLC,QAAS,QACTC,UAAW,YAtBA,C,0HCuFrB,UAnFiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACQC,GAAUC,EAAAA,EAAAA,KAAVD,MACFE,EAAiBR,EAASS,OAAS,GAAKL,EAASK,OAAS,EAE1DC,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAOC,MACf,KAAKC,EAAAA,EAAAA,SACHb,EAAYU,EAAEC,OAAOG,OACrB,MACF,KAAKD,EAAAA,EAAAA,MACHX,EAASQ,EAAEC,OAAOG,OAClB,MACF,KAAKD,EAAAA,EAAAA,SACHT,EAAYM,EAAEC,OAAOG,OACrB,MACF,QACE,OAEL,EAYD,OACE,UAAC,IAAD,CAASC,MAAM,WAAf,WACE,kBAAMC,SAZW,SAAAN,GACnBA,EAAEO,iBAEFrB,GAASsB,EAAAA,EAAAA,IAAc,CAAEN,KAAMb,EAAUE,MAAAA,EAAOE,SAAAA,KAChDE,IAAS7B,EAAAA,EAAAA,GAAO,kCAChBwB,EAAY,IACZE,EAAS,IACTE,EAAY,GACb,EAIiCe,aAAa,MAA3C,WACE,mBAAO/B,MAAO,CAAEgC,YAAa,QAA7B,uBAEE,kBACEC,KAAK,OACLT,KAAMC,EAAAA,EAAAA,SACNC,MAAOf,EACPuB,SAAUb,EACVc,UAAQ,EACRC,UAAW,QAGf,mBAAOpC,MAAO,CAAEgC,YAAa,QAA7B,qBAEE,kBACEC,KAAK,QACLT,KAAMC,EAAAA,EAAAA,MACNC,MAAOb,EACPqB,SAAUb,EACVc,UAAQ,QAGZ,mBAAOnC,MAAO,CAAEgC,YAAa,QAA7B,uBAEE,kBACEC,KAAK,WACLT,KAAMC,EAAAA,EAAAA,SACNC,MAAOX,EACPmB,SAAUb,EACVc,UAAQ,EACRC,UAAW,QAGf,mBACEH,KAAK,SACLI,SAAUlB,EACVnB,MAAO,CAAEsC,QAAS,UAHpB,0BASF,SAAC,IAAD,MAGL,C,uDCzFM,IAAMb,EAAac,OAAOC,OAAO,CACtCC,MAAO,QACPC,SAAU,WACVC,SAAU,Y","sources":["components/Toast/Toast.jsx","pages/Register.jsx","servises/constants.js"],"sourcesContent":["import toast, { Toaster } from 'react-hot-toast';\n\nexport const notify = text => toast(text);\n\nexport const Toast = () => (\n  <Toaster\n    position=\"top-center\"\n    reverseOrder={false}\n    gutter={8}\n    containerClassName=\"\"\n    containerStyle={{}}\n    toastOptions={{\n      // Define default options\n      className: '',\n      duration: 2000,\n      style: {\n        background: 'tomato',\n        color: '#fff',\n        fontSize: '20px',\n      },\n\n      // Default options for specific types\n      success: {\n        duration: 5000,\n        theme: {\n          primary: 'green',\n          secondary: 'black',\n        },\n      },\n    }}\n  />\n);\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Section } from 'components/Section/Section';\nimport { INPUT_NAME } from 'servises/constants';\nimport { registerThunk } from 'redux/Auth/authOperations';\nimport { useAuth } from 'hooks/useAuth';\nimport { Toast, notify } from 'components/Toast/Toast';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { error } = useAuth();\n  const isBtnNotActive = username.length < 5 || password.length < 8;\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case INPUT_NAME.USERNAME:\n        setUsername(e.target.value);\n        break;\n      case INPUT_NAME.EMAIL:\n        setEmail(e.target.value);\n        break;\n      case INPUT_NAME.PASSWORD:\n        setPassword(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(registerThunk({ name: username, email, password }));\n    error && notify('Error happend! Try once again.');\n    setUsername('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Section title=\"Register\">\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <label style={{ marginRight: '30px' }}>\n          Username:\n          <input\n            type=\"text\"\n            name={INPUT_NAME.USERNAME}\n            value={username}\n            onChange={handleChange}\n            required\n            minLength={5}\n          />\n        </label>\n        <label style={{ marginRight: '30px' }}>\n          E-mail:\n          <input\n            type=\"email\"\n            name={INPUT_NAME.EMAIL}\n            value={email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label style={{ marginRight: '30px' }}>\n          Password:\n          <input\n            type=\"password\"\n            name={INPUT_NAME.PASSWORD}\n            value={password}\n            onChange={handleChange}\n            required\n            minLength={8}\n          />\n        </label>\n        <button\n          type=\"submit\"\n          disabled={isBtnNotActive}\n          style={{ padding: '0 20px' }}\n        >\n          Register\n        </button>\n      </form>\n\n      <Toast />\n    </Section>\n  );\n};\n\nexport default Register;\n","export const INPUT_NAME = Object.freeze({\n  EMAIL: 'email',\n  PASSWORD: 'password',\n  USERNAME: 'username',\n});\n"],"names":["notify","text","toast","Toast","position","reverseOrder","gutter","containerClassName","containerStyle","toastOptions","className","duration","style","background","color","fontSize","success","theme","primary","secondary","dispatch","useDispatch","useState","username","setUsername","email","setEmail","password","setPassword","error","useAuth","isBtnNotActive","length","handleChange","e","target","name","INPUT_NAME","value","title","onSubmit","preventDefault","registerThunk","autoComplete","marginRight","type","onChange","required","minLength","disabled","padding","Object","freeze","EMAIL","PASSWORD","USERNAME"],"sourceRoot":""}